+ FUZZER=fuzz_pkcs15_reader
+ shift
+ '[' '!' -v TESTCASE ']'
+ TESTCASE=/testcase
+ '[' '!' -f /testcase ']'
+ export RUN_FUZZER_MODE=interactive
+ RUN_FUZZER_MODE=interactive
+ export FUZZING_ENGINE=libfuzzer
+ FUZZING_ENGINE=libfuzzer
+ export SKIP_SEED_CORPUS=1
+ SKIP_SEED_CORPUS=1
+ run_fuzzer fuzz_pkcs15_reader -runs=100 /testcase
vm.mmap_rnd_bits = 28
/out/fuzz_pkcs15_reader -rss_limit_mb=2560 -timeout=25 -runs=100 /testcase < /dev/null
Running with entropic power schedule (0xFF, 100).
Seed: 2391878655
Loaded 1 modules   (31546 inline 8-bit counters): 31546 [0x565416907fe0, 0x56541690fb1a),
Loaded 1 PC tables (31546 PCs): 31546 [0x56541690fb20,0x56541698aec0),
/out/fuzz_pkcs15_reader: Running 1 inputs 100 time(s) each.
Running: /testcase
=================================================================
==13==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f2ec015cb05 at pc 0x5654162ed934 bp 0x7fff5a7aef30 sp 0x7fff5a7ae6f0
WRITE of size 52545 at 0x7f2ec015cb05 thread T0
SCARINESS: 60 (multi-byte-write-stack-buffer-overflow)
#0 0x5654162ed933 in __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:63:3
#1 0x5654164153a0 in tcos_decipher /src/opensc/src/libopensc/card-tcos.c:626:2
#2 0x56541678b581 in sc_decipher /src/opensc/src/libopensc/sec.c:46:6
#3 0x5654163aa089 in use_key /src/opensc/src/libopensc/pkcs15-sec.c:154:8
#4 0x5654163a7a5d in sc_pkcs15_decipher /src/opensc/src/libopensc/pkcs15-sec.c:283:6
#5 0x56541632ecc4 in LLVMFuzzerTestOneInput /src/opensc/src/tests/fuzzing/fuzz_pkcs15_reader.c:225:17
#6 0x5654161e3be0 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:614:13
#7 0x5654161cee55 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:327:6
#8 0x5654161d48ef in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:862:9
#9 0x5654161ffb92 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
#10 0x7f2ec05aa082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 5792732f783158c66fb4f3756458ca24e46e827d)
#11 0x5654161c703d in _start (/out/fuzz_pkcs15_reader+0x18703d)
DEDUP_TOKEN: __asan_memcpy--tcos_decipher--sc_decipher
Address 0x7f2ec015cb05 is located in stack of thread T0 at offset 773 in frame
#0 0x565416414c5f in tcos_decipher /src/opensc/src/libopensc/card-tcos.c:600
DEDUP_TOKEN: tcos_decipher
This frame has 3 object(s):
[32, 136) 'apdu' (line 602)
[176, 437) 'rbuf' (line 603)
[512, 773) 'sbuf' (line 604) <== Memory access at offset 773 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
(longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /src/opensc/src/libopensc/card-tcos.c:626:2 in tcos_decipher
Shadow bytes around the buggy address:
0x7f2ec015c880: 00 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00
0x7f2ec015c900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
0x7f2ec015c980: 00 00 00 00 00 00 05 f2 f2 f2 f2 f2 f2 f2 f2 f2
0x7f2ec015ca00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
0x7f2ec015ca80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x7f2ec015cb00:[05]f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 00 00 00 00
0x7f2ec015cb80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
0x7f2ec015cc00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
0x7f2ec015cc80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
0x7f2ec015cd00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
0x7f2ec015cd80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
Addressable:           00
Partially addressable: 01 02 03 04 05 06 07
Heap left redzone:       fa
Freed heap region:       fd
Stack left redzone:      f1
Stack mid redzone:       f2
Stack right redzone:     f3
Stack after return:      f5
Stack use after scope:   f8
Global redzone:          f9
Global init order:       f6
Poisoned by user:        f7
Container overflow:      fc
Array cookie:            ac
Intra object redzone:    bb
ASan internal:           fe
Left alloca redzone:     ca
Right alloca redzone:    cb
==13==ABORTING
